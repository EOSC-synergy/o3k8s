# while creating the app, specify the same namespace:
# helm install o3as-app-helm o3as-app-helm --create-namespace --namespace o3as --values o3as-app-helm/values-test.yaml

issuers:
  letsencrypt: letsencrypt-site

# info needed to obtain letsencrypt certificate
# in test deployment we use "acme-staging" to avoid rate limits of letsencrypt
letsencrypt:
  acme:
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    email: some.real@email.world

sites:
  hostApi: o3api.test.fedcloud.eu
  hostWeb: o3web.test.fedcloud.eu
  
env:
  o3asLogLevel: "DEBUG"
  o3asDataPath: /data/Skimmed
  o3asDataSourcesCsv: "https://git.scc.kit.edu/synergy.o3as/o3sources/-/raw/main/Data sources - Sources.csv"
#  o3asPublishedListRemote: "https://git.scc.kit.edu/synergy.o3as/o3sources/-/raw/main/o3as_published_data.txt"
  o3asPublishedListRemote: "https://git.scc.kit.edu/synergy.o3as/o3sources/-/raw/e35e8687240c75aeb566866418578f97835db401/o3as_published_data.txt"
  hdf5UseFileLocking: "FALSE"

commands:
  getPublishedData: "https://git.scc.kit.edu/synergy.o3as/o3k8s/-/raw/main/scripts/get-published-data.sh"

storage:
  volumeName: o3as-storage
  pvcName: o3as-pvc
  pvcStorageClassName: ""
  pvcAccessMode: "ReadWriteMany"
  pvcStorage: "5Gi"

security:
  runAsUser: 1000
  runsAsGroup: 1000

o3api:
  image: o3as/o3api
  imageTag: "0.8.4"
  imagePullPolicy: "Always"
  deployReplicas: 2

o3web:
  image: o3as/o3webapp
  imageTag: "1.0"
  imagePullPolicy: "Always"
  deployReplicas: 1

nsupdate:
  image: o3as/nsupdate
  imageTag: "1.0"
  imagePullPolicy: "Always"

rclone:
  image: rclone/rclone
  imageTag: "1.58"
  runCronRclone: "False"

getPublished:
  image: alpine
  imageTag: "3.14"
  imagePullPolicy: "Always"
